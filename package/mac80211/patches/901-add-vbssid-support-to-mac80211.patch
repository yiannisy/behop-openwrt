diff --git a/include/net/mac80211.h b/include/net/mac80211.h
index af340a9..e52d1c3 100644
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -1292,10 +1292,12 @@ struct ieee80211_sta_rates {
  *	the station moves to associated state.
  * @smps_mode: current SMPS mode (off, static or dynamic)
  * @rates: rate control selection table
+ * @vbssid: vbssid for this station
  */
 struct ieee80211_sta {
 	u32 supp_rates[IEEE80211_NUM_BANDS];
 	u8 addr[ETH_ALEN];
+	u8 vbssid[ETH_ALEN];
 	u16 aid;
 	struct ieee80211_sta_ht_cap ht_cap;
 	struct ieee80211_sta_vht_cap vht_cap;
diff --git a/net/mac80211/cfg.c b/net/mac80211/cfg.c
index 15ec542..5cc15bb 100644
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -1272,6 +1272,11 @@ static int sta_apply_parameters(struct ieee80211_local *local,
 	if (params->aid)
 		sta->sta.aid = params->aid;
 
+	/* vbssid : add the vbssid for this station, as passed through ext_capab. */
+	/* TODO : turn this into a struct that holds all relevant information. */
+	if (params->ext_capab && params->ext_capab_len == ETH_ALEN)
+		memcpy(sta->sta.vbssid, params->ext_capab, ETH_ALEN);
+
 	/*
 	 * Some of the following updates would be racy if called on an
 	 * existing station, via ieee80211_change_station(). However,
diff --git a/net/mac80211/debugfs_sta.c b/net/mac80211/debugfs_sta.c
index 44e201d..b4ca174 100644
--- a/net/mac80211/debugfs_sta.c
+++ b/net/mac80211/debugfs_sta.c
@@ -55,6 +55,20 @@ STA_FILE(dev, sdata->name, S);
 STA_FILE(last_signal, last_signal, D);
 STA_FILE(last_ack_signal, last_ack_signal, D);
 STA_FILE(beacon_loss_count, beacon_loss_count, D);
+//STA_FILE(vbssid, sta.vbssid, MAC);
+
+static ssize_t sta_vbssid_read(struct file *file, char __user *userbuf,
+			       size_t count, loff_t *ppos)
+{
+  char buf[3*ETH_ALEN];
+  struct sta_info *sta = file->private_data;
+
+  int res = snprintf(buf, sizeof(buf), "%pM\n",sta->sta.vbssid);
+  return simple_read_from_buffer(userbuf, count, ppos, buf, res);
+}
+STA_OPS(vbssid);
+
+
 
 static ssize_t sta_flags_read(struct file *file, char __user *userbuf,
 			      size_t count, loff_t *ppos)
@@ -441,6 +455,7 @@ void ieee80211_sta_debugfs_add(struct sta_info *sta)
 	DEBUGFS_ADD(last_ack_signal);
 	DEBUGFS_ADD(current_tx_rate);
 	DEBUGFS_ADD(last_rx_rate);
+	DEBUGFS_ADD(vbssid);
 
 	DEBUGFS_ADD_COUNTER(rx_packets, rx_packets);
 	DEBUGFS_ADD_COUNTER(tx_packets, tx_packets);
diff --git a/net/mac80211/rx.c b/net/mac80211/rx.c
index 0d5bb87..8a72f2b 100644
--- a/net/mac80211/rx.c
+++ b/net/mac80211/rx.c
@@ -3178,6 +3178,13 @@ static void __ieee80211_rx_handle_packet(struct ieee80211_hw *hw,
 				continue;
 			}
 
+			/* roll back proper "bssid" address (hide vbssid),
+			 *  so that packet doesn't get filtered-out. */
+			if (!ieee80211_bssid_match(hdr->addr1, prev_sta->sdata->vif.addr) &&
+			    ieee80211_bssid_match(hdr->addr1, prev_sta->sta.vbssid)){
+			  memcpy(hdr->addr1, prev_sta->sdata->vif.addr, ETH_ALEN);
+			}
+
 			rx.sta = prev_sta;
 			rx.sdata = prev_sta->sdata;
 			ieee80211_prepare_and_rx_handle(&rx, skb, false);
@@ -3189,6 +3196,13 @@ static void __ieee80211_rx_handle_packet(struct ieee80211_hw *hw,
 			rx.sta = prev_sta;
 			rx.sdata = prev_sta->sdata;
 
+			/* roll back proper "bssid" address (hide vbssid),
+			 *  so that packet doesn't get filtered-out. */
+			if (!ieee80211_bssid_match(hdr->addr1, prev_sta->sdata->vif.addr) &&
+			    ieee80211_bssid_match(hdr->addr1, prev_sta->sta.vbssid)){
+			  memcpy(hdr->addr1, prev_sta->sdata->vif.addr, ETH_ALEN);
+			}
+
 			if (ieee80211_prepare_and_rx_handle(&rx, skb, true))
 				return;
 			goto out;
diff --git a/net/mac80211/tx.c b/net/mac80211/tx.c
index 8375a2d..9eb15ac 100644
--- a/net/mac80211/tx.c
+++ b/net/mac80211/tx.c
@@ -1777,6 +1777,12 @@ netdev_tx_t ieee80211_subif_start_xmit(struct sk_buff *skb,
 		memcpy(hdr.addr3, skb->data + ETH_ALEN, ETH_ALEN);
 		hdrlen = 24;
 		band = chanctx_conf->def.chan->band;
+		/* apply vbssid for this station */
+		sta = sta_info_get(sdata, hdr.addr1);
+		if (sta) {
+			/* set the bssid to this station's vbssid */
+			memcpy(hdr.addr2, sta->sta.vbssid, ETH_ALEN);
+		}
 		break;
 	case NL80211_IFTYPE_WDS:
 		fc |= cpu_to_le16(IEEE80211_FCTL_FROMDS | IEEE80211_FCTL_TODS);
